#!/usr/bin/make -f

export DH_VERBOSE=1

SHELL := sh -e

PROJECTS := $(filter-out debian Makefile tools pool, $(wildcard *))
SERVERS := $(shell cat debian/servers)
PACKAGES_THAT_NEED_USERS := python-nova python-cinder python-glance python-keystone python-neutron

# Override upstream's pbr based packaging
export PBR_VERSION=$(shell dpkg-parsechangelog  | grep ^Version: | cut -d ' ' -f2)
export SKIP_PIP_INSTALL=1
export SKIP_GIT_SDIST=1
export SKIP_GENERATE_AUTHORS=1
export SKIP_WRITE_GIT_CHANGELOG=1

export DIST=$(shell dpkg-parsechangelog  | grep ^Distribution: | cut -d ' ' -f2)


%:
	dh $@ --with python2

override_dh_auto_clean: debian/control $(patsubst %,clean/%,$(PROJECTS))

override_dh_auto_build: debian/control $(patsubst %,build/%,$(PROJECTS))

override_dh_auto_install: debian/control $(patsubst %,debian/%.upstart,$(SERVERS)) $(patsubst %,install/%,$(PROJECTS))

debian/%.upstart: debian/upstart.tmpl
	daemon=$*; \
	basename=$${daemon%-*}; \
	sed -e "s,%BASENAME%,$$basename,g" \
	    -e "s,%DAEMON%,$$daemon,g" $< > $@

ifdef DEBDESTDIR
override_dh_builddeb:
	dh_builddeb --destdir=$(DEBDESTDIR)
endif

clean/%: debian/chlog
	dh_auto_clean --sourcedirectory=$*

build/%:
	dh_auto_build --sourcedirectory=$*

install/%:
	if test -e $*/setup.py && (cd $*;python setup.py --name); \
	then \
		name="$$(cd $*;python setup.py --name)" ;\
		pkg_name="$$(grep -i ^$${name}' ' debian/pydist-overrides | awk -- '{print $$2}')"; \
		if test -z "$${pkg_name}"; \
		then \
			name="python-$${name#python-}" ;\
			pkg_name="$$(echo $$name | tr 'A-Z_' 'a-z-')" ;\
		fi; \
		dh_auto_install --sourcedirectory=$* --destdir=debian/$${pkg_name} ;\
		echo $${pkg_name} >> debian/superseded-packages.self-contained; \
	else \
		dh_auto_install --sourcedirectory=$*; \
	fi

# Special cases
build/websockify:
	$(MAKE) -C websockify -f Makefile. rebind.so
	dh_auto_build --sourcedirectory=websockify

install/horizon:
	COMPILE=--install-layout=deb dh_auto_install --sourcedirectory=horizon

override_dh_install: $(patsubst %,debian/%.postinst,$(PACKAGES_THAT_NEED_USERS))
	$(MAKE) -f debian/rules debian/superseded-packages
	$(MAKE) -f debian/rules debian/control debian/overcast-python-monolith.substvars
	dh_install

debian/python-%.postinst: debian/postinst.openstack-template
	sed -e s@%USER%@$*@g < $< > $@

debian/overcast-python-monolith.substvars:
	python -c 'import sys;print "overcast:supersededpackages="+", ".join(sys.argv[1:])' $$(cat debian/superseded-packages) >> debian/overcast-python-monolith.substvars

debian/superseded-packages: debian/superseded-packages.manual
	cat $< > $@
	find debian/tmp/ -name PKG-INFO -o -type f -name '*.egg-info' | xargs cat | grep ^Name:' ' | cut -f2- -d' ' | while read name; \
	do \
		if echo $$name | grep -q ^python-; \
		then \
			echo $$name | tr 'A-Z_' 'a-z-' >> $@; \
		else \
			echo python-$$name | tr 'A-Z_' 'a-z-' >> $@; \
		fi; \
	done

debian/control: debian/control.stub $(patsubst %,debian/%.self-contained.control,$(shell cat debian/superseded-packages.self-contained)) $(patsubst %,debian/%.transitional.control,$(SERVERS) $(shell cat debian/superseded-packages))
	cat $^ > $@

debian/%.transitional.control: debian/control.transitional.tmpl
	sed -e s@PKGNAME@$*@g < $< > $@
	echo $@ >> debian/clean

debian/%.self-contained.control: debian/control.self-contained.tmpl
	sed -e s@PKGNAME@$*@g < $< > $@
	echo $@ >> debian/clean

debian/manifest:
	mv -f debian/manifest debian/manifest.old || touch debian/manifest.old
	repo forall -c 'echo -n "$${REPO_PROJECT} " ; git rev-parse HEAD' > $@

debian/chlog:
	# Populate changelog here as clean target will be run.
	if [ -n "$(BUILD_NUMBER)" ]; \
	then \
		dch --newversion $(BUILD_NUMBER) "Automated build"; \
		dch -D $(DIST) -r ""; \
	fi

.PHONY: debian/control debian/overcast-python-monolith.substvars debian/chlog debian/manifest debian/superseded-packages
